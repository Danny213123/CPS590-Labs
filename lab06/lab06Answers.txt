Question 2:
The shared variable "myglobal" is accessed and updated by two threads, the parent and child processes. Without
any form of synchronization, this causes a race conditition where the program's behaviour is unpredictable and 
the variable is not always 40.

Question 3:
In a space case where the parent and child thread execute their instructions in an alternating pattern
the variable could be 40. This is because the program's output will be determined by the order of execution 
of instructions by the thread

Question 8:
When the sysadmin runs the commands, the processes start in the background because the commands have the "&" at the
end of the line meaning they are sent to the background. The output of both programs will be outputted in the same
shell window. The sysadmin acn use fg <pid> to bring the processes back to the foreground or terminate the processes
by doing CTRL-C or suspend using CTRL-Z
